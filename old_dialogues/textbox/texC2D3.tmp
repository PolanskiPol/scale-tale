[gd_scene load_steps=5 format=3 uid="uid://poe7d6338u3h"]

[ext_resource type="Texture2D" uid="uid://ccbrm5r4iqou3" path="res://dialogues/textbox/textbox_test.png" id="1_606pm"]

[sub_resource type="ViewportTexture" id="ViewportTexture_sfa2j"]
viewport_path = NodePath("SubViewport")

[sub_resource type="GDScript" id="GDScript_xt54g"]
script/source = "extends Sprite3D

@onready var label = $SubViewport/MarginContainer/MarginContainer/Label
@onready var timer = $SubViewport/MarginContainer/LetterDisplayTimer

const MAX_WIDTH=256

var text = \"\"
var letter_index = 0

var letter_time = 0.05
var space_time = 0.05
var punctuation_time = 0.3

signal finished_displaying()

func display_text(text_to_display: String):
	text = text_to_display
	label.text = text_to_display
	
	
	label.text = \"\"
	display_letter()
	
func display_letter():
	label.text += text[letter_index]
	letter_index+=1
	
	if letter_index >= text.length():
		finished_displaying.emit()
		return
		
	match text[letter_index]:
		\"!\",\".\",\",\",\"?\":
			timer.start(punctuation_time)
		\" \":
			timer.start(space_time)
		_:
			timer.start(letter_time)

func _on_letter_display_timer_timeout() -> void:
	display_letter() # Replace with function body.
"

[sub_resource type="GDScript" id="GDScript_2mqxh"]
script/source = "extends MarginContainer

@onready var label = $MarginContainer/Label
@onready var timer = $LetterDisplayTimer

const MAX_WIDTH=256

var text = \"\"
var letter_index = 0

var letter_time = 0.05
var space_time = 0.05
var punctuation_time = 0.3



signal finished_displaying()

func display_text(text_to_display: String):
	text = text_to_display
	label.text = text_to_display
	
	await resized
	custom_minimum_size.x = min(size.x,MAX_WIDTH)
	
	if size.x > MAX_WIDTH:
		label.autowrap_mode = TextServer.AUTOWRAP_WORD
		await resized
		await resized
		custom_minimum_size.y = size.y
	
	global_position.x -= size.x / 2
	global_position.y -= size.y +24
	
	
	label.text = \"\"
	display_letter()

func display_letter():
	label.text += text[letter_index]
	letter_index+=1
	
	if letter_index >= text.length():
		finished_displaying.emit()
		return
		
	match text[letter_index]:
		\"!\",\".\",\",\",\"?\":
			timer.start(punctuation_time)
		\" \":
			timer.start(space_time)
		_:
			timer.start(letter_time)
"

[node name="text_box" type="Sprite3D"]
billboard = 1
texture = SubResource("ViewportTexture_sfa2j")
script = SubResource("GDScript_xt54g")

[node name="SubViewport" type="SubViewport" parent="."]
transparent_bg = true

[node name="MarginContainer" type="MarginContainer" parent="SubViewport"]
offset_right = 40.0
offset_bottom = 40.0
script = SubResource("GDScript_2mqxh")

[node name="NinePatchRect" type="NinePatchRect" parent="SubViewport/MarginContainer"]
layout_mode = 2
texture = ExtResource("1_606pm")
region_rect = Rect2(0, 0, 48, 48)
patch_margin_left = 16
patch_margin_top = 16
patch_margin_right = 16
patch_margin_bottom = 16

[node name="MarginContainer" type="MarginContainer" parent="SubViewport/MarginContainer"]
layout_mode = 2
theme_override_constants/margin_left = 8
theme_override_constants/margin_top = 8
theme_override_constants/margin_right = 8
theme_override_constants/margin_bottom = 8

[node name="Label" type="Label" parent="SubViewport/MarginContainer/MarginContainer"]
layout_mode = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
vertical_alignment = 1

[node name="LetterDisplayTimer" type="Timer" parent="SubViewport/MarginContainer"]
one_shot = true
