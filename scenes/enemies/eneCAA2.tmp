[gd_scene load_steps=2 format=3 uid="uid://cvqrsab0cofjc"]

[sub_resource type="GDScript" id="GDScript_nu5wr"]
script/source = "extends CharacterBody3D

@export var player : SPPlayer3D
@export var detection_distance : float = 16.0

@onready var max_speed : float = 5.0
@onready var speed : float = max_speed

enum EnemyStatus {
	IDLE = 0
	,FOLLOWING = 1
	,PATROLING = 2
}

var status : EnemyStatus
var last_patrol_time : int
var patrol_start_time : int
var player_visible : bool = false
var target : Vector3 = Vector3.ZERO
var gravity : float = ProjectSettings.get(\"physics/3d/default_gravity\")

func patrol(max_distance : float = 10.0) -> void:
	status = EnemyStatus.PATROLING
	patrol_start_time = Utils.now()
	target = Vector3(randf_range(-1.0, 1.0), 0.0, randf_range(-1.0, 1.0)).normalized() * max_distance

func cancel_patrol() -> void:
	status = EnemyStatus.IDLE
	last_patrol_time = Utils.now()
	target = Vector3.ZERO
	
func _physics_process(delta: float) -> void:
	$WatchPlayer.target_position = player.global_transform.origin - $WatchPlayer.global_transform.origin
	
	if($WatchPlayer.get_collider() != null):
		if($WatchPlayer.get_collider().name != \"Player\"):
			player_visible = false
		else:
			if($WatchPlayer.target_position.length() <= detection_distance):
				player_visible = true
				last_patrol_time = Utils.now()
			else:
				player_visible = false
				
	if(player_visible):
		status = EnemyStatus.FOLLOWING
		detection_distance = 32.0
		target = player.global_transform.origin
	else:
		if(status != EnemyStatus.PATROLING):
			status = EnemyStatus.IDLE
		detection_distance = 18.0
		if(status == EnemyStatus.IDLE):
			target = Vector3.ZERO
		if(Utils.now() - last_patrol_time > 3.0 and status == EnemyStatus.IDLE):
			patrol()
			
	if(target != Vector3.ZERO):
		$Front.rotation_degrees.y = ($WatchPlayer.global_transform.origin).angle_to(target)
		$Mesh.rotation_degrees.y = ($WatchPlayer.global_transform.origin).angle_to(target)
		
		if(patrol_start_time - Utils.now() >= 0.66):
			$Front.target_position.x = 2.5
			if($Front.is_colliding()):
				cancel_patrol()
		last_patrol_time = Utils.now()
		velocity.x = (target - global_transform.origin).normalized().x * speed
		velocity.z = (target - global_transform.origin).normalized().z * speed
	else:
		$Front.target_position.x = 0.0
		velocity.x = 0.0
		velocity.z = 0.0
		
	print(status)
		
	if(!is_on_floor()):
		velocity.y -= gravity * delta
	else:
		velocity.y = 0.0
		
	move_and_slide()
"

[node name="Enemy" type="CharacterBody3D"]
script = SubResource("GDScript_nu5wr")

[node name="WatchPlayer" type="RayCast3D" parent="."]

[node name="Front" type="RayCast3D" parent="."]
target_position = Vector3(0, 0, 0)

[node name="Mesh" type="Node3D" parent="."]
